<!-- <form class="" action="/details" method="post">
    <label for="name">Name:</label>
    <input type="text" name="name">
    <br><br>
    <label for="email">Email Address:</label>
    <input type="email" name="email">
    <br><br>
    <label for="phone">Phone no.:</label>
    <input type="text" name="phone">
    <br><br>
    <label for="why">Why do you want to volunteer?</label><br>
    <textarea name="why" rows="8" cols="80"></textarea>
    <br><br>
    <label for="time">How many hours of your day can you donate to the work?</label>
    <input type="text" name="time" value="">
    <br>
    <input type="submit" name="" value="Submit">
</form> -->

<!DOCTYPE html>
<html>

<head>
    <title></title>
    <style type="text/css">
        .form-style-1 {
            margin: 10px auto;
            max-width: 400px;
            padding: 20px 12px 10px 20px;
            font: 13px "Lucida Sans Unicode", "Lucida Grande", sans-serif;
        }

        .form-style-1 li {
            padding: 0;
            display: block;
            list-style: none;
            margin: 10px 0 0 0;
        }

        .form-style-1 label {
            margin: 0 0 3px 0;
            padding: 0px;
            display: block;
            font-weight: bold;
        }

        .form-style-1 input[type=text],
        .form-style-1 input[type=date],
        .form-style-1 input[type=datetime],
        .form-style-1 input[type=number],
        .form-style-1 input[type=search],
        .form-style-1 input[type=time],
        .form-style-1 input[type=url],
        .form-style-1 input[type=email],
        textarea,
        select {
            box-sizing: border-box;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            border: 1px solid #BEBEBE;
            padding: 7px;
            margin: 0px;
            -webkit-transition: all 0.30s ease-in-out;
            -moz-transition: all 0.30s ease-in-out;
            -ms-transition: all 0.30s ease-in-out;
            -o-transition: all 0.30s ease-in-out;
            outline: none;
        }

        .form-style-1 input[type=text]:focus,
        .form-style-1 input[type=date]:focus,
        .form-style-1 input[type=datetime]:focus,
        .form-style-1 input[type=number]:focus,
        .form-style-1 input[type=search]:focus,
        .form-style-1 input[type=time]:focus,
        .form-style-1 input[type=url]:focus,
        .form-style-1 input[type=email]:focus,
        .form-style-1 textarea:focus,
        .form-style-1 select:focus {
            -moz-box-shadow: 0 0 8px #88D5E9;
            -webkit-box-shadow: 0 0 8px #88D5E9;
            box-shadow: 0 0 8px #88D5E9;
            border: 1px solid #88D5E9;
        }

        .form-style-1 .field-divided {
            width: 49%;
        }

        .form-style-1 .field-long {
            width: 100%;
        }

        .form-style-1 .field-select {
            width: 100%;
        }

        .form-style-1 .field-textarea {
            height: 100px;
        }

        .form-style-1 input[type=submit],
        .form-style-1 input[type=button] {
            background: #4B99AD;
            padding: 8px 15px 8px 15px;
            border: none;
            color: #fff;
        }

        .form-style-1 input[type=submit]:hover,
        .form-style-1 input[type=button]:hover {
            background: #4691A4;
            box-shadow: none;
            -moz-box-shadow: none;
            -webkit-box-shadow: none;
        }

        .form-style-1 .required {
            color: red;
        }
    </style>



</head>

<script src="https://unpkg.com/axios/dist/axios.min.js"></script>

<script>
    window.onload = function () {
        // check to see if user has metamask addon installed on his browser. check to make sure web3 is defined
        if (typeof web3 === 'undefined') {
            document.getElementById('metamask').innerHTML =
                'You need <a href=”https://metamask.io/">MetaMask</a> browser plugin to run this example'
        }
        window.ethereum.enable();
        // call the getvalue function here
        getvalue();
    }

    function getvalue() {
        //        var axios=require('axios');
        try {
            web3.eth.defaultAccount = web3.eth.accounts[0];
            var abi = [{
                    "constant": false,
                    "inputs": [{
                        "internalType": "uint256",
                        "name": "x",
                        "type": "uint256"
                    }],
                    "name": "set",
                    "outputs": [],
                    "payable": false,
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "constant": true,
                    "inputs": [],
                    "name": "get",
                    "outputs": [{
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }],
                    "payable": false,
                    "stateMutability": "view",
                    "type": "function"
                }
            ]
            var contractaddress = "0x11886f2545dd3b0192bdab267c1bd47e96812d91";
            var myAbi = web3.eth.contract(abi);
            var myfunction = myAbi.at(contractaddress);

            myfunction.get.call(function (err, xname) {
                if (err) {
                    console.log(err)
                    console.log("errorget");
                }
                if (xname) {
                    //display value on the webpage
                    document.getElementById("xbalance").innerHTML =
                        "last inserted value into the blockchain is : " + xname;
                    //var sum= xname;
                    //     const amt= JSON.stringify({xname});
                    const config = {
                        headers: {
                        'Content-Type': 'application/json'
                        }
                    };
                    const amt=xname;
                    const body=JSON.stringify({"amt":amt});
                    console.log(body);
                    axios({
                        method: 'post',
                        url: '/qwerty',
                        data: body
                    }).then(function(res){
                        console.log("executedddddd");
                    })

                }
                
            });
            //console.log("getvalue executed");

        } catch (err) {
            document.getElementById("xbalance").innerHTML = err;
            console.log("poiu");
        }

    }


    function setvalue() {
        try {
            web3.eth.defaultAccount = web3.eth.accounts[0];
            console.log("funcstart");
            var abi = [{
                    "constant": false,
                    "inputs": [{
                        "internalType": "uint256",
                        "name": "x",
                        "type": "uint256"
                    }],
                    "name": "set",
                    "outputs": [],
                    "payable": false,
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "constant": true,
                    "inputs": [],
                    "name": "get",
                    "outputs": [{
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }],
                    "payable": false,
                    "stateMutability": "view",
                    "type": "function"
                }
            ]
            var contractaddress = "0x11886f2545dd3b0192bdab267c1bd47e96812d91";
            var myAbi = web3.eth.contract(abi);
            var myFunction = myAbi.at(contractaddress);
            var val = document.getElementById('xvalue')
            myFunction.set.sendTransaction(val.value, {
                from: web3.eth.accounts[0],
                gas: 4000000
            }, function (error, result) {
                if (!error) {
                    console.log(result);
                    console.log("chal gaya");
                } else {
                    console.log(error);
                    console.log("nahi chala");
                }
            })
            console.log(contractaddress);
            console.log("setvalue")
        } catch (err) {
            var values = document.getElementById('xvalue');
            document.getElementById("xvalue").innerHTML = err;
          //  console.log("qwerty");
            // console.log(values.value);
            //  console.log(xname);

        }

    }

    function abc(){
    var xvalue = document.getElementById("xvalue");
    var don = document.getElementById("don");
    var donbtn = document.getElementById("donbtn");
    xvalue.value = don.value;
    var Button1 = document.getElementById("Button1");
    Button1.click();
    var myform = document.getElementById("myform");
    myform.reset();
   }
</script>

<body>

    <div id="metamask"></div>
    <h1 style="text-align: center; font-family: fantasy; font-weight: 400">Donate Here</h1>

    <form method="post" action="/razor">

        <ul class="form-style-1">
            <li>
                <label>Name <span class="required">*</span></label>
                <input type="text" name="name" class="field-long" />
            </li>
            <li>
                <label>Email <span class="required">*</span></label>
                <input type="email" name="email" class="field-long" />
            </li>
            <li>
                <label>Phone No. <span class="required">*</span></label>
                <input type="text" name="field4" class="field-long" />
            </li>
            <li>
                <label>Donation(INR) <span class="required">*</span></label>
                <input id="don" type="text" name="amount" class="field-long" />
            </li>

            <li>
                <input id= "donbtn" type="submit" value="Submit" onclick="abc()"/>
            </li>


        </ul>
    </form>


    <table style="visibility: hidden;">
        <tr>
            <td></td>
            <td>
                <div id="xbalance"></div>
            </td>
        </tr>
        <tr>
            <td>Insert a new value :</td>
            <td>
                <input id="xvalue" type="text" />
                <input id="Button1" type="button" onclick="setvalue()" value="Add to Blockchain" />
            </td>
        </tr>
    </table>

    <!-- <form action="/qwerty"></form> -->

    <code><button style="visibility: hidden;" type="butoon" id="paymentclick">pay amount</button> </code>
</body>

</html>